[ 개인 프로젝트 관련 ]
가장 최근에 해결한 기술적인 문제

[ 기본 이론 관련 ]
어떤 프레임워크를 사용했는지? 왜 인지?
    모바일 개발에 Flutter 프레임워크를 사용하였습니다.
     - 구글 트렌드 순위와 관심도 지속적으로 높아지고 있고, 구글에서도 지속적인 업데이트를 하여 관심을 가지게 되었습니다.
     - 크로스플랫폼을 지원하기 때문에 사용하게 되었습니다.
    그 외에는 JQUERY라이브러리와 REACT라이브러리를 사용하였습니다.
     - JQUERY는 코드를 간결하게 쓸 수 있는 장점으로 사용하였습니다.
     - React는 컴포넌트 모듈화를 통해서 재사용이 가능한 라이브러리로 자바스크립트와 혼용이 가능하여 익숙하여 쉽게 접근할 수 있었습니다.

RESTful API에 대한 설명
    http를 url에 전달하는 메소드를 규정하는 양식
    HTTP URI(Uniform Resource Identifier)를 통해 자원(Resource)을 명시하고,
    HTTP Method(POST, GET, PUT, DELETE, PATCH 등)를 통해
    해당 자원(URI)에 대한 CRUD Operation을 적용하는 것을 의미합니다.

HTTP 메소드
    get 리소스를 받아오는 메소드 post 리소스를 전달하는 메소드 delete 리소스를 삭제하는 메소드 put 리소스를 업데이트하는 메소드 

CSRF나 XSS 공격을 막는 방법
    Cross-Site Request Forgery - 사이트간 요청 위조
    - 사이트가 사용자를 신뢰하는 점을 이용한 요청사항 위조공격
    - 방지방법 : 
        Request header의 referrer속성을 이용한 방법(같은 도메인에서 들어오지 않은 정보 차단) : 백엔드 검증방법
        CAPTCHA : 이미지 텍스트 구분
        CSRF Token : 임의의 난수를 세션에 저장하여 사용자의 요청에따라 난수값을 함께 전달 : 백엔드 검증방법
    Cross-Site-Scripting - 사이트간 악성 스크립트삽입
    - 방지방법 : 
        정규식 사용 : 특수문자를 입력받지 못하도록 처리
        입력값 치환 : 특수문자를 입력 시 입력값을 치환
        코드삽입 시 innerHTML보다 innerText 활용

async/await에 대한 설명
    async와 await는 ES2017에 개발 된 비동기처리 방식입니다. 
    

비동기 함수
->>>자바스크립트는 코드를 작성한 순서에 따라서 동기적으로 처리된다. 이를 작성순서와 무관하게 처리하는 것을 비동기처리라 하고, 이를 통해 원하는 순서의 프로그래밍을 구성할 수 있다.
    비동기 함수로는 콜백함수와 promise객체 async와 await문법이 있다.

호이스팅에 대해 설명
인터프리터가 코드를 실행하기 전에 변수 또는 함수를 최 상단으로 불러올리는 것 처럼 보이는 현상

"=="동등연산자와 "==="일치연산자의 차이
    
****클로저란? 
->>>클로저는 함수와 그 함수가 선언됐을 때의 렉시컬 환경(Lexical environment)과의 조합이다.
    자신을 포함하고 있는 외부함수보다 내부함수가 더 오래 유지되는 경우, 
    외부 함수 밖에서 내부함수가 호출되더라도 외부함수의 지역 변수에 접근할 수 있는데 이러한 함수를 클로저(Closure)라 한다.
    위 정의에서 말하는 “함수”란 반환된 내부함수를 의미하고 “그 함수가 선언될 때의 렉시컬 환경(Lexical environment)”란 내부 함수가 선언됐을 때의 스코프를 의미한다. 
    즉, 클로저는 반환된 내부함수가 자신이 선언됐을 때의 환경(Lexical environment)인 스코프를 기억하여 
    자신이 선언됐을 때의 환경(스코프) 밖에서 호출되어도 그 환경(스코프)에 접근할 수 있는 함수를 말한다. 
    이를 조금 더 간단히 말하면 클로저는 자신이 생성될 때의 환경(Lexical environment)을 기억하는 함수다라고 말할 수 있겠다.

클래스형 컴포넌트와 함수형 컴포넌트의 차이
->>>
이벤트 버블링

****스토리북에 대해서 아시나요?

****TDD란

Flex와 Grid의 차이점
플렉스는 일차원적인 레이아웃 구성에 용이하고 grid는 2차원적인 레이아웃 구성에 유리한 디스플레이 속성이다. 둘다 반응형 디스플레이를 구성하는데 유리하다.
플렉스와 달리 그리드는 초기에 블록을 형성하여 이에 대한 크기와 위치를 설정하여 행과 열을 제어할 수 있다. 
정렬과 간격처리에 대한 부분은 플렉스로 구상하는 것이 유리하다.

****MVVM패턴과 Flux패턴의 차이점

API
->> 애플리케이션 프로그래밍 인터페이스의 약자로 소프트웨어간 통신을 위한 규칙을 말합니다.

[ 인적성 ]
자신의 강점과 약점

[ 실제 면접 질문내용 ]

((cs))
브라우저 주소창에 www.google.com을 입력하면 어떤 일이 일어나나요?
->>주소창에 입력 된 주소는 dns를 통해 ip주소로 변경됩니다. 이를 통해 서버에 리소스를 요청하게 됩니다. 
    요청된 정보 중 html코드는 토큰화 작업과 노드작업을 거쳐 DOM 트리를 형성합니다.
    그리고 css코드는 동일하게 토큰화 작업과 노드작업을 거쳐 CSSOM 트리를 형성합니다.
    자바스크립트 코드는 html 파싱을 중단시키고 파싱됩니다.
    이렇게 파싱 된 정보를 합쳐 랜더트리를 형성한 후 
    화면에 표시 될 정보의 위치와 크기를 정하는 레이아웃 과정을 거칩니다.
    그리고 노드의 위치변경이나 스타일 적용등의 페인트 과정을 거쳐서 composite를 통해 페인트 된 부분을 합칩니다.

DNS에 대해 설명해주세요.
->> DNS는 컴퓨터가 서로 통신하는 데 사용하는 숫자 IP 주소로 변환되는, 쉽게 읽을 수 있는 도메인 이름의 디렉터리입니다. 
    예를 들어 브라우저에 URL을 입력하면 DNS는 URL을 해당 이름과 연결된 웹 서버의 IP 주소로 변환합니다. DNS 디렉터리는 정기적으로 업데이트되는 전 세계의 도메인 네임서버에 저장되고 배포됩니다.

GET과 POST의 차이는 무엇인가요?
->> GET과 POST는 html에서 데이터를 전송하는 방식으로 
    GET 은 클라이언트에서 서버로 어떠한 리소스로 부터 정보를 요청하기 위해 사용되는 메서드입니다.
    GET은 쿼리스트링을 통해서 URL주소 끝에 요청 파라미터를 전송합니다.
    POST는 클라이언트에서 서버로 리소스를 생성하거나 업데이트하기 위해 데이터를 보낼 때 사용 되는 메서드입니다.
    POST는 전송할 데이터를 HTTP 메시지 body 부분에 담아서 서버로 전송합니다.

REST API에 대해 설명해주세요.
->> 개발자들이 http요청을 보낼 때 어떤 url에 어떤 메소드를 사용할 지에 대해 정한 형식

객체 지향 프로그래밍이란 무엇인가요?

자료구조 stack과 queue에 대해 설명해주세요.
->>> 스택형의 자료구조는 가장 나중에 입력된 데이터가 최상위에 쌓이는 형태를 가지고 있습니다. 큐형의 자료구조는 가장 먼저 입력 된 데이터가 가장 먼저 출력되는 자료 구조입니다.

프로세스와 스레드에 대해 설명해주세요.

((js))
Promise와 Callback 차이를 설명해주세요.
->>> Promise 객체는 ES6(= ES2015) 버전의 JavaScript부터 새롭게 추가된 것으로 콜백지옥과 예외처리의 복잡성을 해결하며 비동기프로그래밍을 하기 위해 만들어진 객체이다.
    프로미스는 어떠한 작업을 수행할 것을 약속하고 그 작업의 진행 상태 및 결괏값을 저장하고 있는' 객체를 의미한다. 

콜백 지옥(Callback hell)을 해결하는 방법을 말씀해주세요.
->>> 콜백지옥은 비동기 처리의 순서를 보장하기위해 콜백함수가 중첩되어 복잡도가 높아지는 것을 말합니다.
    이를 방지하기 위해서 async/await를 이용하여 비동기처리를 하면 복잡도가 낮게 코드를 설계할 수 있습니다.

async, await 사용 방법을 설명해주세요.
->>> 실행할 함수 앞에 async를 삽입하고 데이터를 받아 처리할 함수에 await를 삽입한다. async를 삽입한 함수는 프로미스 객체를 항상 반환한다. await는 항상 async함수 안에서만 동작한다.
    프라미스가 처리될 때 까지 기다리는 역할을 수행한다. 결과는 그 이후에 반환된다.

Promise를 사용한 비동기 통신과 async, await를 사용한 비동기 통신의 차이를 설명해주세요.
->>> Promise는 콜백함수를 기반으로 동작하는 비동기 통신으로 resolve와 reject함수를 반환하여 처리를 한다. 
    async, await는 이행상태를 async와 await로 규정하여 promise객체 반환을 감지하는 문법이다.
    프로미스는 then()이후 catch()통해 에러핸들링이 가능하고 async, await는 try-catch를 통해 에러핸들링이 가능하다.
    프로미스에 비해 async, await는 코드가 간결하여 가독성이 우수하다.

var, let, const 차이를 설명해주세요.
->>> var 함수영역변수로 재선언이 가능하며 호이스팅이 되는 변수이다.
    let은 블록영역 변수로 재선언이 가능하나 호이스팅이 되지 않아 선언부 아래에서만 호출이 가능하다.
    const 는 상수로 선언과 동시에 할당을 해야하며 호이스팅이 불가하다.

함수 선언형과 함수 표현식의 차이에 대해 설명해주세요.
->>> 선언적 함수는 함수를 선언하고 별도의 할당명령이 없는 function형태의 함수를 일컽는 말 입니다. 이는 함수 전체를 호이스팅합니다.
    함수표현식은 할당형 함수로 함수를 별도의 변수에 할당하는 형태의 함수입니다. ()=>{}형태로 사용되며 이는 선언부만 호이스팅 됩니다.

이벤트 버블링과 캡처링에 대해 설명해주세요.
->>이벤트 버블링은 이벤트가 상위 요소로 전달 되는 것을 말합니다. 하위 요소에서 이벤트가 발생 시 상위요소의 핸들러까지 순차적으로 발생되는 것을 말합니다.
    이벤트 캡처링은 이벤트가 하위요소로 전달 되는 것을 말합니다.

이벤트 버블링과 이벤트 캡처링에 대한 예시를 들어주세요.

클로져(Closure)에 대해 설명해주세요.
->>> 클로저는 반환된 내부함수가 자신이 선언됐을 때의 환경(Lexical environment)인 스코프를 기억하여 
    자신이 선언됐을 때의 환경(스코프) 밖에서 호출되어도 그 환경(스코프)에 접근할 수 있는 함수를 말한다. 

렉시컬 환경(Lexical Environment)에 대해 설명해주세요.
->>> 특정 코드가 작성 또는 선언 된 장소를 의미합니다.

실행 컨텍스트에 대해 설명해주세요.
->>> 실행 할 코드에 제공할 환경정보를 모아놓은 객체를 말합니다.

호이스팅(hoisting)에 대해 설명해주세요.
->>> 호이스팅은 인터프리터가 코드를 실행하기 전에 함수나 변수를 최 상단으로 끌어올리는 것 같은 현상을 말합니다.

데이터 타입에 대해 설명해주세요.
->>> 데이터타입은 변수에 저장 될 데이터의 형식을 말합니다. 자바스크립트의 타입은 Number, String, boolean, null, undefined, simbol, bigint 등이 있습니다.
    자바스크립트는 약타입언어로 자동으로 형변환을 수행합니다.

자바스크립트에서 일어나는 데이터 형 변환에 대해 설명해주세요. / 자바스크립트가 유동적인 언어인 이유는 무엇인가요?
->>> 작업을 처리함에 있어서 오류가 발생하는 것이 아니라 일치하지 않는 타입에 대해 자동으로 형을 변환시키는 것을 말합니다. 그래서 자바스크립트는 따로 형을 지정하지 않으며
    모든 타입의 값으로 재할당이 가능합니다.

프로토타입에 대해 설명해주세요.
->>> 초기 시제품을 의미하며 중요한 기능들이 구현되어 있는 시스템 초기모델을 의미합니다.

깊은 복사와 얕은 복사에 대해 설명해주세요.
->>> 배열의 데이터값을 단순히 새로운 변수에 할당하는 경우 얕은 복사를 진행하는 것과 같습니다.(단순 주소복사)
    이는 복사 된 데이터의 값이 변하면 원본데이터도 함께 업데이트가 발생하여 데이터의 수정이 일어납니다.
    깊은 복사는 데이터의 값의 주소를 완전해 새로운 변수에 할당하는 경우에 발생됩니다.
    이는 주소복사가 아닌 값 복사에 해당하기 때문에 복사된 데이터의 값이 변하더라도 원본데이터에 접근하지 못합니다.

불변성을 유지하려면 어떻게 해야하나요?

this에 대해 설명해주세요.
->>> JavaScript에서 this키워드는 객체를 나타냅니다. 이 객체는 호출되는 것에 따라 다른 의미를 가집니다.
    객체메서드에서는 객체 자신을 의미합니다. 함수에서 전역객체(window)를 의미합니다. 엄격모드에서는 undefined됩니다.
    이벤트에서 이벤트를 수신한 요소자신을 의미하며, 화살표 함수에서는 상위 이벤트요소를 의미합니다.
    엄격모드 : 선언없이 쓰는 변수를 막는 등 엄격한 JS문법을 적용하도록 제한한다!(프로젝트에서 선호됨!)"use strict";

requestAnimationFrame을 사용해본 적 있나요?

((react))
Virtual DOM 작동 원리에 대해 설명해주세요.
->>> UI가 변경을 감지하면 가상돔에 UI를 랜더링한다. 현재 가상돔과 기존의 가상돔을 비교하여 변경부분을 DOM에 반영한다.

Virtual DOM 이 무엇인지 설명해주세요.
->>> 웹 페이지를 이루는 태그들을 자바스크립트가 이용할 수 있게끔 브라우저가 트리구조로 만든 객체인 돔을 추상화한 객체 모델

React를 사용하는 이유에 대해 말씀해주세요.

제어 컴포넌트와 비제어 컴포넌트의 차이에 대해 설명해주세요.

key props를 사용하는 이유는 무엇인가요?

props와 state의 차이는 무엇인가요?

pure component에 대해 설명해주세요.
->>> 변경사항을 체크하고 랜더링 여부를 판단하는 컴포넌트

shouldComponentUpdate에 대해 설명해주세요.
->>>componentDidMount() 함수는 '생성'단계의 생명주기 함수 중 가장 마지막으로 실행되며 true의 경우 한번 더 render()를 호출합니다.

클래스형 컴포넌트와 함수형 컴포넌트의 차이에 대해 설명해주세요.
->>> 선언방식에 차이가 있습니다. 클래스형 컴포넌트는 Component를 상속받아 class키워드로 선언하고 함수형 컴포넌트는 일반적인 함수의 형태로 선언됩니다.
    함수형 컴포넌트에서는 이 생명주기를 useState와 useEffect를 통해 관리하고,
    클래스형 컴포넌트에서는 라이프사이클 메서드를 사용합니다.(componentDidMount, componentDidUpdate, componentWillUnmount)
    클래스형은 객체형의 this.state로 값을 설정하고 this.setState로 값을 핸들링한다. 함수형은 useState로 값을 핸들링한다.
    클래스형은 this.props로 불러오고 함수형 컴포넌트는 props를 랜더함수의 파라미터로 전달받아 사용한다.

생명 주기 메서드에 대해 설명해주세요.
->>> 리액트는 마운트 되고 업데이트 된 후에 언마운트 되는 컴포넌트의 생명주기를 가지고 있습니다.
    함수형 컴포넌트에서는 이 생명주기를 useState와 useEffect를 통해 관리하고,
    클래스형 컴포넌트에서는 라이프사이클 메서드를 사용합니다.(componentDidMount, componentDidUpdate, componentWillUnmount)

리액트에서 JSX 문법이 어떻게 사용되나요?
->>> 중괄호를 사용하여 자바스크립트 코드를 사용하고, 따옴표를 통해 문자형리터럴을 사용할 수 있습니다.
    일반적인 html과 달리 모든 태그가 슬래쉬로 닫힘처리 되어있어야합니다.
    하나의 루트를 가지고 리턴합니다.

왜 state를 직접 바꾸지 않고 useState를 사용해야 하나요?
->>> 일반적인 변수값의 변경이 컴포넌트의 자동적인 변경을 발생시키지 않는다. 그래서 리액트의 상태주기를 관여할 수 있는
    상태관리변수인 후크를 사용하여 컴포넌트가 가상돔에 변경을 감지하도록 설정하는 것이다.

useMemo와 useCallback에 대해 설명해주세요.
->>> useMemo는 컴포넌트 성능을 최척화 하기 위해 사용하는 리액트 훅으로 메모이제이션된 값을 반환합니다.
    useCallback은 리렌더링 사이에 함수 정의를 캐시할 수 있게 해주는 React 훅입니다.

메모이제이션이란?
->>> 동일한 입력에 대해 이미 캐싱 된 결과를 반환하는 기술

리액트에서 메모이제이션을 어떤 방식으로 하나요?
->>> React.memo()를 통해 메모이제이션 할 컴포넌트를 useMemo처리를 하고 props를 전달하여 props에 의존하여 랜더링되도록 설정한다.
    함수의 경우는 useCallback로 처리하여 메모이제이션 한다.
    useMemo를 통해 함수의 리턴값을 메모이제이션 처리한다. deps의 값변경을 감지하여 변경이 없다면 메모이제이션 된 값을 사용한다.

리액트 관련 패키지 중에 제일 좋다고 생각한 것은 무엇인가요?
->>> 리액트 라우터입니다. 실제로 사용해보면서 라우터 구성을 통한 부드러운 페이지 이동과 Provider를 통한 전역변수의 공유가 편리했습니다.

리액트의 렌더링 성능 향상을 위해 어떻게 해야 하나요?
->>> 

React-query에 대해 들어봤나요?

React 18 버전 업데이트 내용에 대해 말씀해주세요.
->>>
    1. Concurrent Feature
    React18 업데이트의 가장 큰 변화는 동시성입니다. 
    동시성은 React가 우선순위 대기열 및 다중 버퍼링 같은 기술을 이용하여 동시에 여러 버전의 UI를 준비할 수 있도록 하는 새로운 메커니즘입니다. 
    동시에 여러 UI를 준비하기 때문에, 메인 스레드를 차단하지 않고 백그라운드에서 새 화면을 준비할 수 있습니다. 
    예를 들자면 UI가 대규모 렌더링 작업 중이더라도 사용자 입력에 즉시 응답이 가능하여 더 나은 유동적인 UX를 제공해 줍니다. 
    Suspense 및 SSR 까지를 포함하여 React18의 새로운 기능들은 이를 활용하도록 구축되었습니다.

    2. Automatic Batching
    리액트 18버전에서 새롭게 추가된 Root API인 createRoot를 통해 배치 이벤트 지원 범위를 콜스택 에서 테스크 큐 까지 확장했습니다. 
    덕분에 비동기 이벤트 처리까지 배치처리가 가능해져 좀 더 효율적이고 빠른 렌더링이 가능해졌습니다. 만약 Automatic Batching 기능을 끄고 싶다면 flushSync 메서드를 사용합니다.

    3. SSR 성능 개선
    React18에서는, renderToPipeableStream 메서드의 추가로, streaming을 지원합니다. 
    streaming 이란 리소스를 작은 덩어리로 나누어 순차적으로 받기 때문에 더 빠른 로딩이 가능한 기술입니다. 따라서 더 빠른 로딩 TTFB(Time To First Byte)이 가능해졌습니다.

    4. Suspense 정식 Release
    Experimental이었던 Suspense가 정식 기능이 되었습니다. 
    Suspense란, 아직 데이터가 준비되지 않은 컴포넌트가 있을 때 먼저 로딩 화면을 보여주고, 로딩이 완료되면 해당 컴포넌트를 보여주는 기능입니다. 
    그리고 pipeToNodeWritable API의 추가로 SSR에서도 Suspense를 사용할 수 있게 되었습니다.

    5. 새로운 Hook
	- useId: 노드의 위치를 나타내는 base32 문자열로 생성되는 유니크한 아이디를 생성합니다.
       - useInsertionEffect: css-in-js 라이브러리가 렌더링 도중 스타일을 삽입할 때 성능 문제를 해결합니다.
	- useDeferredValue: DOM 트리에서 긴급하지 않은 부분의 렌더링 지연합니다. 즉 긴급한 렌더링을 반영한 이후에 렌더링을 시도합니다.
	- useTransition: 트렌지션 펜딩 상태 여부를 나타내는 값과, 트랜지션을 실행시킬 함수를 리턴하여 상태 업데이트를 긴급하지 않은 것으로 간주하는 관리가 가능합니다. 사용자의 입력이 업데이트 때문에 버벅이지 않도록 덜 급한 트랜지션으로 관리할 수 있습니다
	- useSyncExternalStore: 외부 스토어에 대한 업데이트를 갈제로 동기화 하여 외부 스토어가 concurrent read를 지원할수 있습니다. 외부의 데이터를 읽고 구독할 때, 동시성 모드의 렌더링과 타임 슬라이싱을 병행하기 위한 방법을 지원합니다.

    useEffect와 useLayoutEffect의 차이점에 대해 말씀해주세요.

    Context API에 대해 설명해주세요.


((frontend))
브라우저 렌더링 과정을 설명해주세요. / 브라우저는 어떻게 동작 하나요?
->>>서버로부터 리소스 스트림을 전달받는 로드과정이 진행됩니다.
    전달받은 Html은 파싱하여 DOM tree로 만들고 css는 파싱하여 CSSOM tree로 만들고 자바스크립트도 파싱합니다
    이를 직접적으로 화면 렌더링에 필요한 노트만 선택하여 렌더링트리르 생성합니다.
    랜더링 트리를 토대로 뷰포트 내에 그려질 크기와 형태를 정하는 레이아웃 과정을 거치고
    이를 토대로 다층의 레이어를 만들어 화면상에 실제로 출력하는 페인트 과정을 거칩니다.
    컴포지트 단계에서는 페인트단계에서 생성된 다층의 레이어를 합성하여 실제 화면에 출력합니다.

Webpack, Babel, Polyfill에 대해 설명해주세요.

CSR과 SSR의 차이는 무엇인가요?

CORS는 무엇인지, 이를 처리를 해본 경험을 말씀해주세요.

웹 표준을 지키며 개발하시나요?

쿠키와 세션에 대해 설명해주세요.

로그인 처리를 할 때 쿠키와 세션을 어떻게 사용하시나요?

이벤트 루프와 태스크 큐에 대해 설명해주세요.

bundle의 사이즈를 줄이려면 어떻게 해야 하나요?

쿠키, 세션, 웹스토리지의 차이에 대해 설명해주세요.

크로스 브라우징 경험이 있으신가요?

웹 소켓을 사용해보셨나요?

웹사이트 성능 최적화에는 어떤 방법이 있나요?

html, css

Flexbox를 사용해보셨나요?

Cascading에 관해서 설명해주세요.

CSS 애니메이션과 JS 애니메이션의 차이에 대해 설명해주세요.

postition 속성을 나열해주세요.

((개인))

자기소개를 해주세요.

안녕하세요, 안주현입니다. 저는 프론트앤드 직군에 관심을 가져 플러터와 리액트 교육과정을 이수하였습니다.
제가 지원한 프론트앤드 개발에 가장 중요한 것은 '사람을 고려한 개발'이라 생각합니다.
프로그램 사용자와, 코드를 유지보수 하는 개발자 모두를 말합니다. 
그래서 저는 개인 프로젝트에서 사용자를 위한 개발로 사이트 최적화를 진행하였습니다. 메모이제이션과 반복for문을 최소화 시켜 불필요한 랜더링을 없앴습니다.
그리고 개발자를 위한 코드를 작성하기 위해 주석문을 활용하고 함수명이 기능을 유추할 수 있도록 작성하였습니다.
저는 이처럼 사람을 고려한 유연한 개발자로 언제든지 사람에 맞춰 수정 가능한 개발자가 되겠습니다.
+++ 몇 년 간의 00경력으로 개발직무를 수행하는데 00한 강점을 가지고 있습니다.

회사 지원 동기를 말씀해주세요.
최근 경험했던 기억에 남는 에러에 대해 말씀해주세요.
리액트 프로젝트를 진행하면서 이미지의 크기를 전달하여 스크롤 방향을 설정하는 과정에서 겪은 에러가 있습니다.
각 서브페이지에 전달되는 이미지의 크기가 개별크기를 가지고 있어서 스크롤 방향을 나누는 분기포인트를 설정 한 후 가로방향으로 컨텐츠가 진행되는 페이지였습니다.
이 때 빈번한 이벤트 발생으로 인해 이미지의 position().left값이 읽히지 않아 오류가 발생하였습니다.
이를 promise객체를 이용하여 값이 불러들였을 때 스크롤을 하도록 설정하여 오류를 해결하였습니다.

요즘 공부하고 있는 것을 말씀해주세요.
flutter교육을 이수한 후 플러터 프로젝트를 진행하기 위해 공부하고 있습니다.
새로운 다트언어를 기반으로 한 프레임워크여서 공부가 필요하다 생각되어 하고있습니다.

자바스크립트를 공부하면서 가장 인상 깊었던 것을 말씀해주세요.

어떤 개발자를 사수로 두고 싶으신가요?

구글 태그 매니저를 사용했을 때 어려웠던 점이 있었나요?

좋은 코드란 어떤 것이라고 생각하시나요?

어떤 개발자가 되고 싶으신가요?

애자일 방법론을 활용하여 개발을 해보셨나요?

왜 이전 직장을 그만두시게 됐나요?

어떤 프로그래밍 디자인 패턴을 선호하시나요?

토이프로젝트를 실제로 사용하는 유저들이 있었나요?

협업할 때 어려운 점이 있었나요?

프로젝트에서 어떤 업무를 주로 담당했나요?

본인의 장단점을 말씀해주세요.

개발 기간을 촉박하게 요구하는 경우 어떻게 하시나요?

왜 개발자가 되기로 결심하셨나요?

개발 능력 향상을 위해 어떤 것을 하고 계신가요?

새로운 기술을 습득하기 위해 어떤 방식으로 접근하고 계신가요?

버전 관리 시스템은 무엇을 사용해보셨나요?

저희 회사에 궁금한 점이 있으신가요?

저희 회사에서 지원자를 뽑아야하는 이유가 있을까요?

404에러메세지 개념

[ 참고 사이트 ]
1. 면접 20가지 항목 질문->답
https://zero-base.co.kr/event/media_insight_contents_FE_frontend_tech_Interview

이메일, 지원직군, 지원사유, 성별(남/녀), 연령대, 자기소개
[ 이메일 ]
jh.2144.9679@gmail.com
[ 지원직군 ]
크로스플랫폼
[ 지원사유 ]
프로젝트 주제가 현 트렌드에 맞춰져 있고 타겟층이 명확한 부분이 좋아서 관심이 생겼습니다.
대면 회의도 프로젝트 진행에 있어서 집중과 참여를 끌어올릴 좋은 방식이라 생각됩니다.
또한 해당 기술언어(react,flutter)에 대한 이해가 있으며, 앱 개발의 출시까지의 과정을 진행하고 싶습니다.
시작지점의 실력보다 끈기있게 프로젝트를 진행하려는 의지를 본다는 질문을 읽고 꼭 끝까지 같이 해보고 싶어서 지원하였습니다.
[ 성별 ]
녀
[ 연령대 ]
30대
[ 자기소개 ]
프론트앤드 개발 직무 희망중인 취업준비생입니다. 
6개월의 react, flutter 교육과정을 이수중이며(24년 1월 19일 종강, 수료예정) 
React라이브러리를 활용한 포트폴리오 사이트 제작경험이 있습니다. 
flutter프레임워크는 간단한 위젯 제작경험이 있습니다.